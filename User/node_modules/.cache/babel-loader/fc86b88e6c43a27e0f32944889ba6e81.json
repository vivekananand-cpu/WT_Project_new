{"ast":null,"code":"var _jsxFileName = \"/Users/pradyumnathorat/Downloads/OnlineQuiz-master/User/src/components/CountDown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/Countdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountDown = () => {\n  _s();\n\n  const [timeHr, setTimeHr] = useState();\n  const [timeMin, setTimeMin] = useState();\n  const [timeSec, setTimeSec] = useState();\n  let interval;\n\n  const startTimer = () => {\n    const CountDownDate = new Date(\"may 25,2022\").getTime();\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distances = CountDownDate - now;\n      const hr = Math.floor(distances % (24 * 60 * 60 * 1000) / (1000 * 60 * 60));\n      const min = Math.floor(distances / (1000 * 60 * 60)) / (1000 * 60);\n      const sec = Math.floor(distances / (1000 * 60)) / 1000;\n\n      if (distances < 0) {\n        //stop timer\n        clearInterval(interval.current);\n      } else {\n        // update timer\n        setTimeHr(hr);\n        setTimeMin(min);\n        setTimeSec(sec);\n      }\n    }, interval);\n  };\n\n  useEffect(() => {\n    startTimer();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [timeHr, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [timeMin, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: timeSec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountDown, \"b69EngTp8pgFfGF8EI+/c11VvMU=\");\n\n_c = CountDown;\nexport default CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["/Users/pradyumnathorat/Downloads/OnlineQuiz-master/User/src/components/CountDown.js"],"names":["React","useEffect","useState","CountDown","timeHr","setTimeHr","timeMin","setTimeMin","timeSec","setTimeSec","interval","startTimer","CountDownDate","Date","getTime","setInterval","now","distances","hr","Math","floor","min","sec","clearInterval","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,yBAAP;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBH,QAAQ,EAAjC;AACA,QAAM,CAACI,OAAD,EAASC,UAAT,IAAqBL,QAAQ,EAAnC;AACA,QAAM,CAACM,OAAD,EAASC,UAAT,IAAqBP,QAAQ,EAAnC;AAIA,MAAIQ,QAAJ;;AAEA,QAAMC,UAAU,GAAC,MAAI;AAEjB,UAAMC,aAAa,GAAG,IAAIC,IAAJ,CAAS,aAAT,EAAwBC,OAAxB,EAAtB;AAEAJ,IAAAA,QAAQ,GAAGK,WAAW,CAAC,MAAM;AACzB,YAAMC,GAAG,GAAG,IAAIH,IAAJ,GAAWC,OAAX,EAAZ;AACA,YAAMG,SAAS,GAAGL,aAAa,GAAGI,GAAlC;AAEA,YAAME,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAS,IAAI,KAAK,EAAL,GAAU,EAAV,GAAe,IAAnB,CAAT,IAAmC,OAAO,EAAP,GAAY,EAA/C,CAAX,CAAX;AAEA,YAAMI,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAWH,SAAS,IAAI,OAAO,EAAP,GAAY,EAAhB,CAApB,KAA0C,OAAO,EAAjD,CAAZ;AAEA,YAAMK,GAAG,GAAGH,IAAI,CAACC,KAAL,CAAWH,SAAS,IAAI,OAAO,EAAX,CAApB,IAAqC,IAAjD;;AAGA,UAAGA,SAAS,GAAC,CAAb,EAAe;AACX;AAEAM,QAAAA,aAAa,CAACb,QAAQ,CAACc,OAAV,CAAb;AAEH,OALD,MAKK;AACD;AACAnB,QAAAA,SAAS,CAACa,EAAD,CAAT;AACAX,QAAAA,UAAU,CAACc,GAAD,CAAV;AACAZ,QAAAA,UAAU,CAACa,GAAD,CAAV;AAEH;AAEJ,KAxBqB,EAwBnBZ,QAxBmB,CAAtB;AA0BH,GA9BD;;AAgCAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU;AACb,GAFQ,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEK;AAAA,iBAAKP,MAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,eAGK;AAAA,iBAAKE,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YAHL,eAIK;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAtDD;;GAAML,S;;KAAAA,S;AAwDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport \"../styles/Countdown.css\"\nconst CountDown = () => {\n    const [timeHr,setTimeHr]=useState();\n    const [timeMin,setTimeMin]=useState();\n    const [timeSec,setTimeSec]=useState();\n\n\n\n    let interval;\n\n    const startTimer=()=>{\n\n        const CountDownDate = new Date(\"may 25,2022\").getTime();\n\n        interval = setInterval(() => {\n            const now = new Date().getTime();\n            const distances = CountDownDate - now;\n\n            const hr = Math.floor(distances % (24 * 60 * 60 * 1000)/(1000 * 60 * 60));\n\n            const min = Math.floor(distances / (1000 * 60 * 60))/(1000 * 60);\n\n            const sec = Math.floor(distances / (1000 * 60))/(1000);\n\n\n            if(distances<0){\n                //stop timer\n\n                clearInterval(interval.current);\n\n            }else{\n                // update timer\n                setTimeHr(hr);\n                setTimeMin(min);\n                setTimeSec(sec);\n                \n            }\n\n        }, interval);\n\n    }\n\n    useEffect(() => {\n        startTimer()\n    })\n\n\n    return (\n        <div className=\"countdown\">\n             \n             <h1>{timeHr}:</h1>\n             <h1>{timeMin}:</h1>\n             <h1>{timeSec}</h1>\n        </div>\n    )\n}\n\nexport default CountDown\n"]},"metadata":{},"sourceType":"module"}